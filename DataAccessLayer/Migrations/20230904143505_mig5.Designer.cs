// <auto-generated />
using System;
using DataAccessLayer.Concrete.EntityFramwork.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(GuzellikSalonuDbContext))]
    [Migration("20230904143505_mig5")]
    partial class mig5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataEntitiesLayer.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("DataEntitiesLayer.Entities.Costumers.Costumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<string>("CostumerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostumerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostumerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostumerSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Costumers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 1",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 1",
                            Point = 100
                        },
                        new
                        {
                            Id = 2,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 2",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 2",
                            Point = 100
                        },
                        new
                        {
                            Id = 3,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 3",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 3",
                            Point = 100
                        },
                        new
                        {
                            Id = 4,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 4",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 4",
                            Point = 100
                        },
                        new
                        {
                            Id = 5,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 5",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 5",
                            Point = 100
                        },
                        new
                        {
                            Id = 6,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 6",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 6",
                            Point = 100
                        },
                        new
                        {
                            Id = 7,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 7",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 7",
                            Point = 100
                        },
                        new
                        {
                            Id = 8,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 8",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 8",
                            Point = 100
                        },
                        new
                        {
                            Id = 9,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 9",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 9",
                            Point = 100
                        },
                        new
                        {
                            Id = 10,
                            Balance = 500,
                            CostumerEmail = "musteri1@example.com",
                            CostumerName = "Müşteri 10",
                            CostumerPhone = "555-111-1111",
                            CostumerSurname = "Soyadı 10",
                            Point = 100
                        });
                });

            modelBuilder.Entity("DataEntitiesLayer.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StockGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("DataEntitiesLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataEntitiesLayer.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("DataEntitiesLayer.Entities.Appointment", b =>
                {
                    b.HasOne("DataEntitiesLayer.Entities.User", "User")
                        .WithMany("Appointments")
                        .HasForeignKey("UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataEntitiesLayer.Entities.User", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
